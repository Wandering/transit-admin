<!--<?xml version="1.0" encoding="UTF-8"?>-->
<!--<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mybatis="http://mybatis.org/schema/mybatis-spring"-->
       <!--xmlns:aop="http://www.springframework.org/schema/aop" xmlns="http://www.springframework.org/schema/beans"-->
       <!--xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"-->
       <!--xsi:schemaLocation="-->
           <!--http://mybatis.org/schema/mybatis-spring      http://mybatis.org/schema/mybatis-spring.xsd-->
           <!--http://www.springframework.org/schema/aop     http://www.springframework.org/schema/aop/spring-aop.xsd-->
           <!--http://www.springframework.org/schema/beans   http://www.springframework.org/schema/beans/spring-beans.xsd-->
           <!--http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd-->
           <!--http://www.springframework.org/schema/tx      http://www.springframework.org/schema/tx/spring-tx.xsd-->
       <!--" >-->
    <!--&lt;!&ndash;<bean id="zkResource" class="cn.thinkjoy.cloudstack.sz.ZookeeperResource"/>&ndash;&gt;-->
    <!--&lt;!&ndash;<bean id="zkPropConfigurer" class="cn.thinkjoy.cloudstack.sz.ZookeeperConfigurer">&ndash;&gt;-->
        <!--&lt;!&ndash;<property name="order" value="2"/>&ndash;&gt;-->
        <!--&lt;!&ndash;<property name="ignoreUnresolvablePlaceholders" value="true"/>&ndash;&gt;-->
        <!--&lt;!&ndash;<property name="location">&ndash;&gt;-->
            <!--&lt;!&ndash;<ref bean="zkResource"/>&ndash;&gt;-->
        <!--&lt;!&ndash;</property>&ndash;&gt;-->
    <!--&lt;!&ndash;</bean>&ndash;&gt;-->

    <!--&lt;!&ndash;<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">&ndash;&gt;-->
        <!--&lt;!&ndash;<property name="order" value="1" />&ndash;&gt;-->
        <!--&lt;!&ndash;<property name="ignoreUnresolvablePlaceholders" value="true" />&ndash;&gt;-->
    <!--&lt;!&ndash;</bean>&ndash;&gt;-->

    <!--&lt;!&ndash; 使用annotation 自动注册bean, 并保证@Required、@Autowired的属性被注入 &ndash;&gt;-->
    <!--<context:annotation-config/>-->
    <!--<context:component-scan base-package="cn.thinkjoy.grab.service,cn.thinkjoy.grab.dao"/>-->

    <!--&lt;!&ndash; 引入dubbo配置文件 请根据需要更改&ndash;&gt;-->
    <!--&lt;!&ndash;<import resource="classpath:dubbo/gaokao360-dubbo-provider.xml"/>&ndash;&gt;-->
    <!--&lt;!&ndash;默认的redis配置，启动时会建立连接&ndash;&gt;-->
    <!--&lt;!&ndash;<import resource="classpath*:spring-redis.xml"/>&ndash;&gt;-->
    <!--&lt;!&ndash; ucm的配置文件，用于统一登录 &ndash;&gt;-->
    <!--&lt;!&ndash;<import resource="classpath*:spring-iauth.xml"/>&ndash;&gt;-->
    <!--<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">-->
        <!--<property name="dataSource" ref="dataSource" />-->
        <!--<qualifier value="zgk" />-->
    <!--</bean>-->

    <!--&lt;!&ndash; MyBatis配置 &ndash;&gt;-->
    <!--<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">-->
        <!--<property name="dataSource" ref="dataSource"/>-->
        <!--&lt;!&ndash; 自动扫描domain目录, 省掉Configuration.xml里的手工配置 &ndash;&gt;-->
        <!--<property name="typeAliasesPackage"-->
                  <!--value="cn.thinkjoy.common.managerui.domain,cn.thinkjoy.grab.domain,cn.thinkjoy.grab.dto,cn.thinkjoy.zgk.dto"/>-->
        <!--&lt;!&ndash; 显式指定Mapper文件位置 &ndash;&gt;-->
        <!--<property name="mapperLocations" value="classpath*:/mybatis/**/*.xml"/>-->
    <!--</bean>-->
    <!--&lt;!&ndash; 扫描basePackage下接口 自动生成代理实现类 &ndash;&gt;-->
    <!--<mybatis:scan base-package="cn.thinkjoy.grab.dao"-->
                  <!--factory-ref="sqlSessionFactory"/>-->


    <!--<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">-->
        <!--&lt;!&ndash; 基本属性 url、user、password &ndash;&gt;-->
        <!--<property name="url" value="jdbc:mysql://localhost:3306/zgk2_zj?useUnicode=true&amp;characterEncoding=UTF-8" />-->
        <!--<property name="username" value="admin" />-->
        <!--<property name="password" value="Gk360@test" />-->

        <!--&lt;!&ndash; 配置初始化大小、最小、最大 &ndash;&gt;-->
        <!--<property name="initialSize" value="1" />-->
        <!--<property name="minIdle" value="1" />-->
        <!--<property name="maxActive" value="20" />-->

        <!--&lt;!&ndash; 配置获取连接等待超时的时间 &ndash;&gt;-->
        <!--<property name="maxWait" value="60000" />-->

        <!--&lt;!&ndash; 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 &ndash;&gt;-->
        <!--<property name="timeBetweenEvictionRunsMillis" value="60000" />-->

        <!--&lt;!&ndash; 配置一个连接在池中最小生存的时间，单位是毫秒 &ndash;&gt;-->
        <!--<property name="minEvictableIdleTimeMillis" value="300000" />-->

        <!--<property name="validationQuery" value="SELECT 'x'" />-->
        <!--<property name="testWhileIdle" value="true" />-->
        <!--<property name="testOnBorrow" value="false" />-->
        <!--<property name="testOnReturn" value="false" />-->

        <!--&lt;!&ndash; 打开PSCache，并且指定每个连接上PSCache的大小 &ndash;&gt;-->
        <!--<property name="poolPreparedStatements" value="true" />-->
        <!--<property name="maxPoolPreparedStatementPerConnectionSize" value="20" />-->

        <!--&lt;!&ndash; 配置监控统计拦截的filters &ndash;&gt;-->
        <!--<property name="filters" value="stat" />-->
    <!--</bean>-->

<!--</beans>-->
